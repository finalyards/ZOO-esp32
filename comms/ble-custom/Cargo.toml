[package]
name = "ble-custom"
edition = "2024"
rust-version = "1.89"
publish = false

# 'esp-hal' recommends only using 'release', so...
# Defaults -> https://doc.rust-lang.org/cargo/reference/profiles.html?highlight=incremental#release
[profile.release]
debug = 2
#debug-assertions = true     # since we .. kind-of only live in the 'release'
#codegen-units = 1      # LLVM can perform better optimizations using a single thread
#opt-level     = "s"     # optimize for binary size, but keep loop vectorization enabled
#lto           = "thin"  # "can produce better optimized code, using whole-program analysis, at the cost of longer linking time."
                        #   - thin: "similar to “fat”, but takes substantially less time to run [...]"

# We don't have a library, so no regular 'dependencies'. Well, except optional deps need to
# be under such a grouping.
#
[dependencies]
defmt           = { version = "1.0.1", optional = true }

[dev-dependencies]
#R? bt-hci          = { version = "0.2" }
defmt-rtt       = { version = "1.0.0" }
embassy-executor = { version = "0.9.1" }
#embassy-futures = { version = "0.1.2" }
#embassy-sync    = { version = "0.6.2" }
#embassy-time    = { version = "0.4.0", features = ["generic-queue-8", "defmt", "defmt-timestamp-uptime-us"]}    # for time-stamp in logs

esp-alloc       = { version = "0.8.0" }
esp-backtrace   = { version = "0.17.0", features = ["panic-handler", "defmt", "esp32c3"] }
esp-bootloader-esp-idf = { version = "0.2.0" }
esp-hal         = { version = "1.0.0-rc.0", features = ["unstable", "esp32c3"] }   # "defmt"
esp-hal-embassy = { version = "0.9.0", features = ["defmt", "esp32c3"] }
esp-preempt = { version = "0.0.1", features = ["defmt", "esp32c3"] }
#esp-println = { version = "0.15.0", features = ["defmt"] }
esp-radio = { version = "0.15.0", features = [ "ble", "unstable", "defmt", "esp32c3" ] }
static_cell     = { version = "2" }
trouble-host    = { version = "0.3.0", features = ["default-packet-pool-mtu-255"] } # "defmt"

[build-dependencies]
anyhow          = { version = "1.0", default-features = false }
serde           = { version = "1.0", features = ["derive"] }
toml            = "0.9"

[features]
defmt = ["dep:defmt", "esp-hal/defmt", "trouble-host/defmt"]

# According to TrouBLE ESP32 examples: note, uses 'lulf's fork of 'esp-hal' sources!!
#   -> https://github.com/embassy-rs/trouble/blob/main/examples/esp32/Cargo.toml
#
[patch.crates-io]
esp-alloc =             { git = "https://github.com/lulf/esp-hal.git", branch = "bt-hci-0.5" }
esp-backtrace =         { git = "https://github.com/lulf/esp-hal.git", branch = "bt-hci-0.5" }
esp-bootloader-esp-idf = { git = "https://github.com/lulf/esp-hal.git", branch = "bt-hci-0.5" }
esp-hal =               { git = "https://github.com/lulf/esp-hal.git", branch = "bt-hci-0.5" }
esp-hal-embassy =       { git = "https://github.com/lulf/esp-hal.git", branch = "bt-hci-0.5" }
esp-preempt =           { git = "https://github.com/lulf/esp-hal.git", branch = "bt-hci-0.5" }
esp-radio =             { git = "https://github.com/lulf/esp-hal.git", branch = "bt-hci-0.5" }
#esp-println =           { git = "https://github.com/lulf/esp-hal.git", branch = "bt-hci-0.5" }

# Having 'required-features' stops compilation, in case some features wouldn't be declared.
#
[[example]]
name = "custom-emb"
required-features = ["defmt"]

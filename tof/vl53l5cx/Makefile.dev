#
# This Makefile is only for help - a wrapper around 'cargo build' to shorten the commands.
#
# Usage:
#	$ [DEFMT_LOG=trace|debug|info|...] [BUILD_MODE=""] make -f Makefile.dev {single|many|...}
#		# builds and runs a certain sample
#
DEFMT_LOG?=debug
BUILD_MODE?=--release

FEATURES?=
LOG_ENV:=DEFMT_LOG=esp_hal=info,$(DEFMT_LOG)
	# otherwise, 'esp-hal' dumps all kinds of DEBUG

DEFMT_HOST_FMT:='{t:dimmed} [{L:bold}] {s}'

REMAKE:=$(MAKE) -f $(MAKEFILE_LIST)

ALL_FEATURES:="single,ambient_per_spad,nb_spads_enabled,signal_per_spad,range_sigma_mm,distance_mm,reflectance_percent"

# Read the 'TARGET' from './cargo/config.toml'
#
TARGET:=$(shell cat ../.cargo/config.toml | grep -e '^target\s*=\s"' | cut -d '"' -f2)
	# riscv32imac-unknown-none-elf

# Detect 'cargo' build cache
#
# 'cargo' stores output in a 'target' dir. We get its path via ’build.rs’ to ’.OUT_DIR’. [1]
#
#	[1]: Cargo Book > Build cache
#		https://doc.rust-lang.org/stable/cargo/guide/build-cache.html
#
_OUT_DIR:=.OUT_DIR

# Note! Defined with '=' so that it gets re-evaluated on-site!
_OUT_EXAMPLE=$(shell cat ${_OUT_DIR} | sed -E 's^/build/.+$$^/examples/^')$(EXAMPLE)

all:
	@false

single s:
	EXAMPLE=single-emb \
	  FEATURES=single,distance_mm \
	  $(REMAKE) --no-print-directory _build _run

single2 s2:
	EXAMPLE=single-emb \
	  FEATURES=single,distance_mm,targets_per_zone_2 \
	  $(REMAKE) --no-print-directory _build _run

s_full:
	EXAMPLE=single-emb \
	  FEATURES=single,$(ALL_FEATURES) \
	  $(REMAKE) --no-print-directory _build _run

s_full2:
	EXAMPLE=single-emb \
	  FEATURES=single,$(ALL_FEATURES),targets_per_zone_2 \
	  $(REMAKE) --no-print-directory _build _run

many m:
	EXAMPLE=many-emb \
	  FEATURES=flock,distance_mm \
	  EMBASSY_EXECUTOR_TASK_ARENA_SIZE=50000 $(REMAKE) --no-print-directory _build _run

m_full:
	EXAMPLE=many-emb \
	  FEATURES=flock,$(ALL_FEATURES) \
	  EMBASSY_EXECUTOR_TASK_ARENA_SIZE=50000 $(REMAKE) --no-print-directory _build _run

m-dev md:
	EXAMPLE=many-emb \
	  FEATURES=flock,distance_mm \
	  BUILD_MODE="" \
	  EMBASSY_EXECUTOR_TASK_ARENA_SIZE=50000 $(REMAKE) --no-print-directory _build _run

# Run connected to UART (to see serial output); release
#
m-serial ms:
	EXAMPLE=many-emb \
	  FEATURES=examples_serial,flock,distance_mm \
	  EMBASSY_EXECUTOR_TASK_ARENA_SIZE=50000 $(REMAKE) --no-print-directory _build _run_with_espflash

# Run connected to UART (to see serial output)
#
m-dev-serial mds:
	EXAMPLE=many-emb \
	  FEATURES=examples_serial,flock,distance_mm \
	  BUILD_MODE="" \
	  EMBASSY_EXECUTOR_TASK_ARENA_SIZE=50000 $(REMAKE) --no-print-directory _build _run_with_espflash

#---
_build:
	$(LOG_ENV) cargo build $(BUILD_MODE) --features=$(FEATURES),defmt --example $(EXAMPLE)
	@test -f ${_OUT_DIR} || (echo >&2 "Did not generate ${_OUT_DIR}"; false)

_run:
	probe-rs run --log-format $(DEFMT_HOST_FMT) $(_OUT_EXAMPLE)

_run_with_espflash:
	espflash flash -f 80mhz --monitor $(_OUT_EXAMPLE)

echo:
	@echo $(_OUT_DIR)

.PHONY: all single single2 s_full many m_full _build _run echo

[package]
name    = "fox"
version = "0.1.0"
edition = "2021"
rust-version = "1.80"
    # 1.80: checks for validity of configuration names
    # 1.77.0 provides `cargo::` syntax for build script output instructions
publish = false

# Profiles are important (for compilation speed); they deserve to be up here!
#
[profile.dev]
opt-level = "z"
    # 1: "basic" optimizations
overflow-checks = false     # disable integer overflow checks
panic = "abort"
# Defaults -> https://doc.rust-lang.org/cargo/reference/profiles.html?highlight=incremental#dev

[profile.release]
#debug         = "line-tables-only"
debug = true
#codegen-units = 1      # LLVM can perform better optimizations using a single thread
codegen-units = 32
opt-level     = "s"     # optimize for binary size, but keep loop vectorization enabled
panic = "abort"
lto           = "thin"  # "can produce better optimized code, using whole-program analysis, at the cost of longer linking time."
                        #   - thin: "similar to “fat”, but takes substantially less time to run [...]"
# Defaults -> https://doc.rust-lang.org/cargo/reference/profiles.html?highlight=incremental#release

[dependencies]
defmt            = { version = "0.3.8", optional = true }
defmt-rtt        = { version = "0.4.1", optional = true }
embassy-executor = { version = "0.5.0" }      # +"task-arena-size-xxx" (for stable, C3); +"defmt"
embassy-time     = { version = "0.3.1",  features = ["generic-queue-8"] }
#esp-alloc           = { version = "0" }
esp-backtrace    = { version = "0.13.0", features = ["exception-handler", "panic-handler"] }   # +{mcu}, +"defmt"
esp-hal          = { version = "0.19.0", features = ["async"] }                                # +{mcu}, +"defmt"
esp-hal-embassy  = { version = "0.2.0",  features = [] }                                       # +{mcu}, +"defmt"
#esp-hal-smartled    = { version = "0.11.0", optional = true }
static_cell      = { version = "2.1.0" }

[build-dependencies]
esp-build = "0.1.0"     # 'build.rs' uses it

[features]
esp32c3 = ["esp-backtrace/esp32c3", "esp-hal/esp32c3", "esp-hal-embassy/esp32c3"]
esp32c6 = ["esp-backtrace/esp32c6", "esp-hal/esp32c6", "esp-hal-embassy/esp32c6"]

# 'nightly' has some benefits over stable (as of 1-Aug-24), but we don't currently see a reason to bring in the heavier
# toolchain.
#nightly = ["embassy-executor/nightly", "static_cell/nightly"]      # ..if we do... ;)

non_nightly = [
    "embassy-executor/task-arena-size-8192"
    # ignored for 'nightly'; see -> https://github.com/embassy-rs/embassy/blob/main/embassy-executor/README.md#task-arena-size
]

# 'defmt-rtt' with 'probe-rs run'
defmt-rtt = [
    "dep:defmt",
    "dep:defmt-rtt",
      #
    "embassy-executor/defmt",
    "esp-backtrace/defmt",
    "esp-hal/defmt",
    "esp-hal-embassy/defmt",
]

default = ["non_nightly", "defmt-rtt"]


# To conditionally comment-out blocks
#
#[lints.rust]  # needs 'rustc' 1.80
#unexpected_cfgs = { level = "warn", check-cfg = ['cfg(values = "//")'] }

#
# Makefile for ULD (= C driver) wrapper
#
# Gets called by 'cargo build' (but can be used manually as well!).
#
# Usage:
#	<<
#	  $ make -f Makefile.inner tmp/libvendor_uld.a src/uld_raw.rs
#	<<
#
# Requires:
#	- bindgen
#	- patch
#
# Note: 'bindgen' docs show how that tool can also build the static library as part of the 'cargo build' command run.
#		We kind of follow that approach, but wrap all the C side actions still under a 'Makefile'.
#

#---
# NOTE: 'clang' only recognizes the 'riscv32-unknown-elf' target, not the more fine grained ones.
#	<<
#	  $ clang -print-targets | grep risc
#     riscv32     - 32-bit RISC-V
#	  riscv64     - 64-bit RISC-V
#	<<
#
#	Related:
#		- "RISC-V has different triples for clang and rustc" (2021; closed)
#			-> https://github.com/rust-lang/rust-bindgen/issues/2136
#		- "RISC-V target not passed on correctly to clang" (2019; open)
#			-> https://github.com/rust-lang/rust-bindgen/issues/1555
#
_VL53L5CX_ULD_API=VL53L5CX_ULD_API

_TMP:=./tmp/
_C_SRC:=tmp/c_src

_OBJ_PATH:=$(_TMP)/$(TARGET)

_OTHER_INCS:=platform.h fake/*.h

_TARGET_ARCH:=riscv32-unknown-elf

_MAKEFILE_INNER:=$(MAKEFILE_LIST)	# Makefile.inner

all:
	@false

#---
# Build the static library
#
# Note: '--thin' means the archive simply points to the '.o' file, which is expected to remain available. This is
#		way over-optimization, but since I happened to read the whole 'man ar', why not.. :) [[it would work without '--thin']]
#
tmp/libvendor_uld.a: tmp/vl53l5cx_api.o
	ar rcs $@ $<

# Note: Dependency on features is via 'Cargo.toml'. 'build.rs' rebuilds 'tmp/config.h' on each run, so it's not
#		a good idea to use it (would cause everything to recompile, all the time). This may be overthinking, but
#		..it works.
#
tmp/%.o: $(_C_SRC)/%.c wrap.h $(_C_SRC)/*.h $(_OTHER_INCS) Cargo.toml
	@echo $<
	clang -nostdinc --target=$(_TARGET_ARCH) -Ifake -I. -I$(_C_SRC) -c -o $@ $<

#---
# Patch ST.com sources from './VL53LCX_ULD_API/**' to 'tmp/c_src/'
#
# 	- places e.g. headers and C files in the same folder, for convenience
#	- removes a nasty! reference to a field in a structure that's supposed to be customer-made and opaque
#
$(_C_SRC)/%.h: $(_VL53L5CX_ULD_API)/inc/%.h |_c_src_mkdir
	@cp $< $@

$(_C_SRC)/vl53l5cx_api.c: $(_VL53L5CX_ULD_API)/src/vl53l5cx_api.c ./patch |_c_src_mkdir
	patch $< ./patch -o $@

# Error at Make root level, if vendor sources aren't there
ifeq ("$(wildcard $(_VL53L5CX_ULD_API)/src/*)", "")
$(error ST.com ULD driver not found; please download and place in the folder $(_VL53L5CX_ULD_API))
endif

_c_src_mkdir:
	@install -d $(_C_SRC)

# Make sure features have been processed.
# We don't use regular 'tmp/config.h:' target, because it would not work with 'make -B' (force rebuilds).
ifeq ("$(wildcard tmp/config.h)", "")
$(error No 'tmp/config.h'. Either create an empty file or run once with 'cargo build')
endif

#---
# Generate Rust
#
# Notes:
#	- '--formatter=prettyplease' (not needing nightly?) didn't work		// claimed to be fixed in bindgen 0.70.0
#	- using 'rustfmt.toml' > normalize_doc_attributes requires nightly

# Generates 'src/uld_raw.rs'. MANUAL CHANGES TO IT WILL BE LOST; modify this instead.
#
# About 'bindgen' (v.0.69.4):
#	- prints errors to stdout, which is .... a bit unkind.
#	- does not process lines like:
#		<<
#			define VL53L5CX_RESOLUTION_4X4			((uint8_t) 16U)
#		<<
#		As a countermeasure, we declare 'consts' in 'wrap.h'.
#
# WEIRD:
#	The author didn't get '--blocklist-file' to work. It didn't deny the functions in 'platform.h' - but that's just 8 names.
#	Work-around:
#		--blocklist-function 'VL53L5CX_?(RdByte|WrByte|RdMulti|WrMulti|Reset_Sensor|SwapBuffer|WaitMs)' \
#
#	Similarly, '--allowlist-file {file}.h' _DID NOT WORK_ when applied to a file included from 'wrap.h'.
#	Work-around:
#		keep all wrapping (also enums) in one file (good anyhow)
#
# Enums:
#	The 'sed' changes:
#		<<
#			#[repr(u32)]
#			#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
#			pub enum ... {
#		<<
#	into:
#		<<
#			#[repr(u32)]
#			#[derive(FromRepr, Debug, Copy, ...)]
#			pub enum ... {
#		<<
#
#	This allows 'strum' to be used, for 'MyEnum::from_repr(<int>)', which is handy.
#
#	Note: 'sed' *can* do pattern-matching that spans multiple lines (we'd ideally take that 'pub enum' into
#		the pattern and just change two parts), but that's complicated. In our case, dum, separate replacements
#		do the trick.
#
#	NOTE: Pretty vital to raise logging level (for non-internals) to 'WARN'. Can be done!!
#
src/uld_raw.rs: wrap.h $(_C_SRC)/vl53l5cx_api.h $(_C_SRC)/vl53l5cx_buffers.h $(_OTHER_INCS) $(_MAKEFILE_INNER) Cargo.toml
	  RUST_LOG='warn,bindgen::ir=error' bindgen $< \
	    --allowlist-file wrap.h \
	    --allowlist-type 'VL53L5CX_.+' \
	    --allowlist-function 'vl53l5cx_check_data_ready' \
	    --allowlist-function 'vl53l5cx_get_(?:(power_mode)|(ranging_data))' \
	    --allowlist-function 'vl53l5cx_init' \
	    --allowlist-function 'vl53l5cx_set_(?:(i2c_address)|(power_mode))' \
	    --allowlist-function 'vl53l5cx_set_(?:(resolution)|(ranging_frequency_hz)|(integration_time_ms)|(sharpener_percent)|(target_order)|(ranging_mode))' \
	    --allowlist-function 'vl53l5cx_st(?:(art)|(op))_ranging' \
	    --allowlist-item 'API_REVISION' \
	    \
	    --use-core \
	    --default-enum-style rust \
	    --raw-line '#![allow(non_camel_case_types)]' \
	    --raw-line '#![allow(non_snake_case)]' \
		--raw-line 'use strum::FromRepr;' \
	    -- -I. -I$(_C_SRC) \
	  | sed -e 's/#[[]repr(u32)[]]/#[repr(u8)]/' \
	  | sed -e 's/#[[]derive(Debug, Copy, Clone, Hash, PartialEq, Eq)/#[derive(FromRepr, Copy, Clone, Hash, PartialEq, Eq)/' \
	  > $@

	# Note: 'sed' removes 'Debug' from the derived behaviours. This is intentional; 'defmt' uses 'Format'
	#		so if we derive something, should be it.

# Test for the above (for development, only)
x: src/uld_raw.rs
	grep -q API_REVISION $<
	@#grep -q DEFAULT_I2C_ADDRESS $<
	grep -q 'pub enum PowerMode' $<
	grep -q vl53l5cx_init $<
	grep -q vl53l5cx_get_ranging_data $<
	! grep -q 'static VL53L5CX_FIRMWARE' $<
	! grep -q vl53l5cx_is_alive $<
	! grep -q vl53l5cx_get_resolution $<
	! grep -q VL53L5CX_RdByte $<
	@#
	@echo ""
	@echo "Yay!"

_clean:
	-rm src/uld_raw.rs tmp/libvendor_uld.a tmp/vl53l5cx_api.o

_klean: _clean
	cargo clean

echo:
	@echo $(MAKEFILE_LIST)

#--
.PHONY: all _c_src_mkdir _clean _klean echo

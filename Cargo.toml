#
# Derived from 'esp-hal-template' -> https://github.com/jessebraham/esp-hal-template/blob/main/embassy/Cargo.toml
#   and the 'esp-hal/examples/'
#

[package]
name    = "vl53l5cx"
version = "0.1.0"
edition = "2021"
rust-version = "1.77.0"     # the `cargo::` syntax for build script output instructions (1.77.0)
license = "MIT OR Apache-2.0"
publish = false

[dependencies]
defmt            = "0.3.8"
defmt-rtt        = "0.4.1"
#embassy-executor    = { version = "0.5.0", features = ["task-arena-size-40960", "defmt"] }     # 'task-arena-size-40960' is from esp-hal/examples; is it useful?
embassy-executor    = { version = "0.5.0", features = ["defmt"] }
embassy-time     = { version = "0.3.1",  features = ["generic-queue-8"] }
#esp-alloc           = { version = "0" }
esp-backtrace    = { version = "0.12.1", features = ["defmt", "exception-handler", "panic-handler"] }   # mcu as feature
esp-hal          = { version = "0.18.0", features = ["async", "defmt"] }                                # mcu as feature
esp-hal-embassy  = { version = "0.1.0",  features = [] }                                                 # mcu as feature
#esp-hal-smartled    = { version = "0.11.0", optional = true }
rustversion = "1.0.17"
static_cell      = { version = "2.1.0",  features = ["nightly"] }  # needs nightly?

[build-dependencies]
# {}

[features]
#esp32   = ["esp-backtrace/esp32",   "esp-hal/esp32",   "esp-hal-embassy/esp32",   "esp-hal-smartled/esp32"]
esp32c2 = ["esp-backtrace/esp32c2", "esp-hal/esp32c2", "esp-hal-embassy/esp32c2"]
esp32c3 = ["esp-backtrace/esp32c3", "esp-hal/esp32c3", "esp-hal-embassy/esp32c3"]   #, "esp-hal-smartled?/esp32c3"]
esp32c6 = ["esp-backtrace/esp32c6", "esp-hal/esp32c6", "esp-hal-embassy/esp32c6"]   #, "esp-hal-smartled?/esp32c6"]
esp32h2 = ["esp-backtrace/esp32h2", "esp-hal/esp32h2", "esp-hal-embassy/esp32h2"]   #, "esp-hal-smartled?/esp32h2"]
#esp32s2 = ["esp-backtrace/esp32s2", "esp-hal/esp32s2",  "esp-hal-embassy/esp32s2", "esp-hal-smartled?/esp32s2"]
#esp32s3 = ["esp-backtrace/esp32s3", "esp-hal/esp32s3",  "esp-hal-embassy/esp32s3", "esp-hal-smartled?/esp32s3"]

# Below kept, in case we want 'esp-{println|storage|wifi|smartled|ieee802154}', later
##esp32   = ["esp-backtrace/esp32",   "esp-hal/esp32",   "esp-hal-embassy/esp32",   "esp-println/esp32",   "esp-storage?/esp32",   "esp-wifi?/esp32",   "esp-hal-smartled/esp32"]
#esp32c2 = ["esp-backtrace/esp32c2", "esp-hal/esp32c2", "esp-hal-embassy/esp32c2", "esp-println/esp32c2", "esp-storage?/esp32c2", "esp-wifi?/esp32c2", ]
#esp32c3 = ["esp-backtrace/esp32c3", "esp-hal/esp32c3", "esp-hal-embassy/esp32c3", "esp-println/esp32c3", "esp-storage?/esp32c3", "esp-wifi?/esp32c3", "esp-hal-smartled/esp32c3"]
#esp32c6 = ["esp-backtrace/esp32c6", "esp-hal/esp32c6", "esp-hal-embassy/esp32c6", "esp-println/esp32c6", "esp-storage?/esp32c6", "esp-wifi?/esp32c6", "esp-hal-smartled/esp32c6", "esp-ieee802154/esp32c6"]
#esp32h2 = ["esp-backtrace/esp32h2", "esp-hal/esp32h2", "esp-hal-embassy/esp32h2", "esp-println/esp32h2", "esp-storage?/esp32h2", "esp-wifi?/esp32h2", "esp-hal-smartled/esp32h2", "esp-ieee802154/esp32h2"]
##esp32s2 = ["esp-backtrace/esp32s2", "esp-hal/esp32s2",  "esp-hal-embassy/esp32s2", "esp-println/esp32s2", "esp-storage?/esp32s2", "esp-wifi?/esp32s2", "esp-hal-smartled/esp32s2"]
##esp32s3 = ["esp-backtrace/esp32s3", "esp-hal/esp32s3",  "esp-hal-embassy/esp32s3", "esp-println/esp32s3", "esp-storage?/esp32s3", "esp-wifi?/esp32s3", "esp-hal-smartled/esp32s3"]

[profile.release]
debug         = true  # Debug info is useful, and does not affect the size of the final binary
codegen-units = 1     # LLVM can perform better optimizations using a single thread
lto           = "fat" # TODO: ???
opt-level     = "s"   # TODO: ???

[patch.crates-io]
esp-backtrace   = { git = "https://github.com/esp-rs/esp-hal", rev = "a2883ac" }
esp-hal         = { git = "https://github.com/esp-rs/esp-hal", rev = "a2883ac" }
esp-hal-embassy = { git = "https://github.com/esp-rs/esp-hal", rev = "a2883ac" }
